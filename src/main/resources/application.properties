
spring.application.name=test

server.port=6005
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

spring.datasource.url = jdbc:postgresql://127.0.0.1:5432/activitidemo
spring.datasource.username = nidhal	
spring.datasource.password = nidhal
spring.datasource.driverClassName=org.postgresql.Driver

#spring.datasource.url = jdbc:postgresql://ec2-54-235-92-244.compute-1.amazonaws.com:5432/dbut5otm215bnk?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
#spring.datasource.username = wzqqwckiwuwuyv
#spring.datasource.password = ec24e42dd4822105eef97f26b8287f3b5caf7d1982db6d07dada944c8b0f7226
#spring.datasource.driverClassName=org.postgresql.Driver

#spring.datasource.url = jdbc:mysql://localhost:3306/activitirest-mysql?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username = root
#spring.datasource.password = root
#spring.datasource.driverClassName=com.mysql.jdbc.Driver

#drop n create table again, good for testing, comment this in production
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate ddl auto (create, create-drop, validate, update)


spring.jpa.hibernate.ddl-auto = create-drop


spring.main.allow-bean-definition-overriding=true


spring.jpa.show-sql=false

spring.activiti.historyLevel=audit
spring.activiti.dbHistoryUsed = true
